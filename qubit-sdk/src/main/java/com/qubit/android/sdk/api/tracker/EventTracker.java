package com.qubit.android.sdk.api.tracker;

import com.qubit.android.sdk.api.tracker.event.QBEvent;
import com.qubit.android.sdk.api.tracker.event.QBEvents;
import com.qubit.android.sdk.internal.experience.ExperienceListener;
import com.qubit.android.sdk.internal.experience.ExperienceObject;
import com.qubit.android.sdk.internal.lookup.LookupData;

import org.jetbrains.annotations.Nullable;

import java.util.List;
import java.util.concurrent.Future;

/**
 * Event tracker interface.
 */
public interface EventTracker {

  /**
   * Send an event to Qubit.
   * Method is asynchronous. Events are sent immediately or buffered for later in case of lack of internet connection.
   * Event object {@link QBEvent} can be generated by one of methods in {@link QBEvents}.
   * @param event Event to send.
   */
  void sendEvent(QBEvent event);

  LookupData getLookupData();

  void getExperienceData(
      List<String> experienceIdList,
      @Nullable Integer variation,
      @Nullable Boolean preview,
      @Nullable Boolean ignoreSegments,
      ExperienceListener experienceListener
  );

  /**
   * Enable or disable collecting new events.
   * By default event tracker is enabled.
   * @param enable true - enable, false - disable
   */
  void enable(boolean enable);

}
